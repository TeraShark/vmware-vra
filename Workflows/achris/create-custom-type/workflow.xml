<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:workflow xmlns:ns2="http://vmware.com/vco/workflow" root-name="item1" object-name="workflow:name=generic" id="78950e9c-43b3-436c-be75-c26a3da15dc9" editor-version="2.0" version="0.0.3" api-version="6.0.0" restartMode="1" resumeFromFailedMode="0">
    <display-name>create-custom-type</display-name>
    <position y="50.0" x="100.0"/>
    <input>
        <param name="namespace" type="string"/>
        <param name="typeName" type="string"/>
        <param name="iconResourceFileName" type="ResourceElement"/>
        <param name="typeProperties" type="Array/string"/>
        <param name="generateFinderStubs" type="boolean"/>
        <param name="target_folder" type="WorkflowCategory"/>
    </input>
    <output/>
    <attrib name="namespaceRef" type="DynamicTypes:DynamicNamespaceDefinition">
        <value encoded="n"/>
    </attrib>
    <attrib name="token" type="string">
        <value encoded="n"></value>
    </attrib>
    <workflow-item name="item0" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="45.844970061659424" x="873.4442766121177"/>
    </workflow-item>
    <workflow-item name="item1" out-name="item2" type="link" linked-workflow-id="5b8ff1c1-7f21-442a-956b-f28599ec422c" comparator="0">
        <display-name>Create Namespace</display-name>
        <script encoded="false"></script>
        <in-binding>
            <bind name="namespace" type="string" export-name="namespace"/>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="DynamicTypes:DynamicNamespaceDefinition" export-name="namespaceRef"/>
        </out-binding>
        <description> </description>
        <position y="60.0" x="180.0"/>
    </workflow-item>
    <workflow-item name="item2" out-name="item4" type="link" linked-workflow-id="52d82b26-4142-44c4-87d6-3d26b2075502" comparator="0">
        <display-name>Create Type</display-name>
        <script encoded="false"></script>
        <in-binding>
            <bind name="namespace" type="DynamicTypes:DynamicNamespaceDefinition" export-name="namespaceRef"/>
            <bind name="typeName" type="string" export-name="typeName"/>
            <bind name="icon" type="ResourceElement" export-name="iconResourceFileName"/>
            <bind name="props" type="Array/string" export-name="typeProperties"/>
            <bind name="generateWorkflowStubs" type="boolean" export-name="generateFinderStubs"/>
            <bind name="workflowStubsCategory" type="WorkflowCategory" export-name="target_folder"/>
            <bind name="findByIdBindingType" type="string" export-name=""/>
            <bind name="findByIdBindingAction" type="Action" export-name=""/>
            <bind name="findByIdBindingWorkflow" type="Workflow" export-name=""/>
            <bind name="findAllBindingType" type="string" export-name=""/>
            <bind name="findAllBindingAction" type="Action" export-name=""/>
            <bind name="findAllBindingWorkflow" type="Workflow" export-name=""/>
            <bind name="hasChildrenInRelationBindingType" type="string" export-name=""/>
            <bind name="hasChildrenInRelationBindingAction" type="Action" export-name=""/>
            <bind name="hasChildrenInRelationBindingWorkflow" type="Workflow" export-name=""/>
            <bind name="findRelationBindingType" type="string" export-name=""/>
            <bind name="findRelationBindingAction" type="Action" export-name=""/>
            <bind name="findRelationBindingWorkflow" type="Workflow" export-name=""/>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="DynamicTypes:DynamicTypeDefinition" export-name=""/>
        </out-binding>
        <description> </description>
        <position y="60.0" x="300.0"/>
    </workflow-item>
    <workflow-item name="item4" out-name="item5" type="task" comparator="0">
        <display-name>Auth token</display-name>
        <script encoded="false">&#13;
var RestHostFactory = System.getModule("com.vmware.pscoe.library.rest").RestHostFactory();&#13;
var RestClient = System.getModule("com.vmware.pscoe.library.rest").RestClient();&#13;
&#13;
&#13;
var endpointUrl = "https://cava-6-240-202.eng.vmware.com";&#13;
var endpointName = "vRA";&#13;
var requestContent = {};&#13;
requestContent.username = "configadmin";&#13;
requestContent.password = "VMware1!";&#13;
&#13;
var restHost = RestHostFactory.newHostWithBasicAuth(endpointUrl, endpointName, requestContent.username, requestContent.password); &#13;
var restClient = new RestClient(restHost);&#13;
&#13;
var request = {&#13;
    path: '/csp/gateway/am/api/login?access_token=',&#13;
    params: [],&#13;
    content: JSON.stringify(requestContent),&#13;
    options: {&#13;
        skipEncodeParams: true,	&#13;
        returnResponseObject: true,		&#13;
        returnResponseObjectForReal: false, 	&#13;
        stringifyJsonContent: false,	&#13;
        interpretResponseCode: false,	&#13;
        headers: {&#13;
            'Content-Type': 'application/json',&#13;
            'Accept': 'application/json'&#13;
        },&#13;
        errorHandler: {					//Defines a retry mechanism in case of failed requests&#13;
            numberOfRetries: 3,			//Number of retries&#13;
            retryWaitInterval: 15,			//Polling interval in seconds&#13;
            errorsToRetry: ["Read timed out"]	//Specific errors to retry (Default: ["Connection pool shut down"])&#13;
        }&#13;
    }&#13;
};&#13;
System.debug("Calling API...");&#13;
//var urlTemplate = "workflows/{id}";&#13;
&#13;
var httpData = restClient.post(request.path, request.params, request.content, request.options);&#13;
if (httpData.statusCode != 200){&#13;
    throw "Error calling API. Received Status Code: " + httpData.statusCode;&#13;
}&#13;
var access_token = JSON.parse(httpData.contentAsString).access_token;&#13;
token = access_token;&#13;
&#13;
</script>
        <in-binding>
            <bind name="target_folder" type="WorkflowCategory" export-name="target_folder"/>
        </in-binding>
        <out-binding>
            <bind name="token" type="string" export-name="token"/>
        </out-binding>
        <description>Simple task with custom script capability.</description>
        <position y="60.0" x="420.0"/>
    </workflow-item>
    <workflow-item name="item5" out-name="item6" type="task" comparator="0">
        <display-name>duplicate create workflow</display-name>
        <script encoded="false">//get workflow content to copy:&#13;
//GET https://cava-6-240-202.eng.vmware.com/vco-controlcenter/client/api/platform/workflows/78950e9c-43b3-436c-be75-c26a3da15dc9/content/&#13;
&#13;
var RestHostFactory = System.getModule("com.vmware.pscoe.library.rest").RestHostFactory();&#13;
var RestClient = System.getModule("com.vmware.pscoe.library.rest").RestClient();&#13;
&#13;
&#13;
var endpointUrl = "https://cava-6-240-202.eng.vmware.com";&#13;
var endpointName = "vRA";&#13;
var requestContent = {};&#13;
requestContent.username = "configadmin";&#13;
requestContent.password = "VMware1!";&#13;
&#13;
var restHost = RestHostFactory.newHostWithBasicAuth(endpointUrl, endpointName, requestContent.username, requestContent.password); &#13;
var restClient = new RestClient(restHost);&#13;
var wfid = "8ebed660-d202-44c7-ad52-6eddb217c68b"&#13;
var request = {&#13;
    path: '/vco-controlcenter/client/api/platform/workflows/{wfid}/content/',&#13;
    params: [wfid],&#13;
    options: {&#13;
        skipEncodeParams: true,	&#13;
        returnResponseObject: true,		&#13;
        returnResponseObjectForReal: false, 	&#13;
        stringifyJsonContent: false,	&#13;
        interpretResponseCode: false,	&#13;
        headers: {&#13;
            'Content-Type': 'application/json',&#13;
            'Accept': 'application/json',&#13;
            'Authorization': 'Bearer ' + token&#13;
        },&#13;
        errorHandler: {					//Defines a retry mechanism in case of failed requests&#13;
            numberOfRetries: 3,			//Number of retries&#13;
            retryWaitInterval: 15,			//Polling interval in seconds&#13;
            errorsToRetry: ["Read timed out"]	//Specific errors to retry (Default: ["Connection pool shut down"])&#13;
        }&#13;
    }&#13;
};&#13;
System.debug("Fetching Template Workflow via API...");&#13;
//var urlTemplate = "workflows/{id}";&#13;
&#13;
var httpData = restClient.get(request.path, request.params, request.options);&#13;
if (httpData.statusCode != 200){&#13;
    throw "Error calling API. Received Status Code: " + httpData.statusCode;&#13;
}&#13;
&#13;
System.debug("Creating Workflow Copy");&#13;
&#13;
var wfContent = JSON.parse(httpData.contentAsString);&#13;
//System.debug(wfContent);&#13;
System.debug(JSON.stringify(wfContent));&#13;
&#13;
var newId = createGuid();&#13;
//System.debug(httpData.contentAsString);&#13;
var newWfName = "Create " + namespace + "." + typeName;&#13;
wfContent["display-name"] = newWfName;&#13;
var outputs = {&#13;
      "param": [&#13;
        {&#13;
          "name": "result",&#13;
          "type": "DynamicTypes:" + namespace + "." + typeName&#13;
        }&#13;
      ]&#13;
    };&#13;
wfContent["id"] = newId;&#13;
wfContent["output"] = outputs;&#13;
var newWfContent = {"name":newWfName, "schema-workflow":wfContent};&#13;
&#13;
//POST https://cava-6-240-202.eng.vmware.com/vco-controlcenter/client/api/platform/workflows&#13;
&#13;
request = {&#13;
    path: '/vco-controlcenter/client/api/platform/workflows',&#13;
    params: [],&#13;
    content: newWfContent,&#13;
    options: {&#13;
        skipEncodeParams: true,	&#13;
        returnResponseObject: true,		&#13;
        returnResponseObjectForReal: false, 	&#13;
        stringifyJsonContent: true,	&#13;
        interpretResponseCode: false,	&#13;
        headers: {&#13;
            'Content-Type': 'application/json',&#13;
            'Accept': 'application/json',&#13;
            'Authorization': 'Bearer ' + token&#13;
        },&#13;
        errorHandler: {					//Defines a retry mechanism in case of failed requests&#13;
            numberOfRetries: 3,			//Number of retries&#13;
            retryWaitInterval: 15,			//Polling interval in seconds&#13;
            errorsToRetry: ["Read timed out"]	//Specific errors to retry (Default: ["Connection pool shut down"])&#13;
        }&#13;
    }&#13;
};&#13;
System.debug("Creating new Workflow...");&#13;
//var urlTemplate = "workflows/{id}";&#13;
&#13;
var httpData = restClient.post(request.path, request.params, request.content, request.options);&#13;
if (httpData.statusCode != 201){&#13;
    throw "Error calling API. Received Status Code: " + httpData.statusCode;&#13;
}&#13;
System.debug(httpData.statusCode);&#13;
&#13;
var wfRef = JSON.parse(httpData.contentAsString);&#13;
//Get the new WF ID:&#13;
newId = wfRef.id;&#13;
&#13;
System.debug("Tagging WF");&#13;
var newWf = Server.getWorkflowWithId(newId);&#13;
var w = new Workflow();&#13;
&#13;
Server.tagGlobally(newWf, "achris", null);&#13;
System.debug("Done");&#13;
&#13;
function createGuid()  &#13;
{  &#13;
   return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {  &#13;
      var r = Math.random()*16|0, v = c === 'x' ? r : (r&amp;0x3|0x8);  &#13;
      return v.toString(16);  &#13;
   });  &#13;
} </script>
        <in-binding>
            <bind name="token" type="string" export-name="token"/>
            <bind name="typeName" type="string" export-name="typeName"/>
            <bind name="namespace" type="string" export-name="namespace"/>
        </in-binding>
        <out-binding/>
        <description>Simple task with custom script capability.</description>
        <position y="60.0" x="540.0"/>
    </workflow-item>
    <workflow-item name="item6" out-name="item7" type="task" comparator="0">
        <display-name>duplicate update workflow</display-name>
        <script encoded="false">//get workflow content to copy:&#13;
//GET https://cava-6-240-202.eng.vmware.com/vco-controlcenter/client/api/platform/workflows/78950e9c-43b3-436c-be75-c26a3da15dc9/content/&#13;
&#13;
var RestHostFactory = System.getModule("com.vmware.pscoe.library.rest").RestHostFactory();&#13;
var RestClient = System.getModule("com.vmware.pscoe.library.rest").RestClient();&#13;
&#13;
&#13;
var endpointUrl = "https://cava-6-240-202.eng.vmware.com";&#13;
var endpointName = "vRA";&#13;
var requestContent = {};&#13;
requestContent.username = "configadmin";&#13;
requestContent.password = "VMware1!";&#13;
&#13;
var restHost = RestHostFactory.newHostWithBasicAuth(endpointUrl, endpointName, requestContent.username, requestContent.password); &#13;
var restClient = new RestClient(restHost);&#13;
var wfid = "7cfc353e-dbcd-4c4e-89b0-9b7014ea6f69"&#13;
var request = {&#13;
    path: '/vco-controlcenter/client/api/platform/workflows/{wfid}/content/',&#13;
    params: [wfid],&#13;
    options: {&#13;
        skipEncodeParams: true,	&#13;
        returnResponseObject: true,		&#13;
        returnResponseObjectForReal: false, 	&#13;
        stringifyJsonContent: false,	&#13;
        interpretResponseCode: false,	&#13;
        headers: {&#13;
            'Content-Type': 'application/json',&#13;
            'Accept': 'application/json',&#13;
            'Authorization': 'Bearer ' + token&#13;
        },&#13;
        errorHandler: {					//Defines a retry mechanism in case of failed requests&#13;
            numberOfRetries: 3,			//Number of retries&#13;
            retryWaitInterval: 15,			//Polling interval in seconds&#13;
            errorsToRetry: ["Read timed out"]	//Specific errors to retry (Default: ["Connection pool shut down"])&#13;
        }&#13;
    }&#13;
};&#13;
System.debug("Fetching Template Workflow via API...");&#13;
//var urlTemplate = "workflows/{id}";&#13;
&#13;
var httpData = restClient.get(request.path, request.params, request.options);&#13;
if (httpData.statusCode != 200){&#13;
    throw "Error calling API. Received Status Code: " + httpData.statusCode;&#13;
}&#13;
&#13;
System.debug("Creating Workflow Copy");&#13;
&#13;
var wfContent = JSON.parse(httpData.contentAsString);&#13;
//System.debug(wfContent);&#13;
System.debug(JSON.stringify(wfContent));&#13;
&#13;
var newId = createGuid();&#13;
//System.debug(httpData.contentAsString);&#13;
var newWfName = "Update " + namespace + "." + typeName;&#13;
wfContent["display-name"] = newWfName;&#13;
var outputs = {&#13;
      "param": [&#13;
        {&#13;
          "name": "result",&#13;
          "type": "DynamicTypes:" + namespace + "." + typeName&#13;
        }&#13;
      ]&#13;
    };&#13;
wfContent["id"] = newId;&#13;
wfContent["output"] = outputs;&#13;
var newWfContent = {"name":newWfName, "schema-workflow":wfContent};&#13;
&#13;
//POST https://cava-6-240-202.eng.vmware.com/vco-controlcenter/client/api/platform/workflows&#13;
&#13;
request = {&#13;
    path: '/vco-controlcenter/client/api/platform/workflows',&#13;
    params: [],&#13;
    content: newWfContent,&#13;
    options: {&#13;
        skipEncodeParams: true,	&#13;
        returnResponseObject: true,		&#13;
        returnResponseObjectForReal: false, 	&#13;
        stringifyJsonContent: true,	&#13;
        interpretResponseCode: false,	&#13;
        headers: {&#13;
            'Content-Type': 'application/json',&#13;
            'Accept': 'application/json',&#13;
            'Authorization': 'Bearer ' + token&#13;
        },&#13;
        errorHandler: {					//Defines a retry mechanism in case of failed requests&#13;
            numberOfRetries: 3,			//Number of retries&#13;
            retryWaitInterval: 15,			//Polling interval in seconds&#13;
            errorsToRetry: ["Read timed out"]	//Specific errors to retry (Default: ["Connection pool shut down"])&#13;
        }&#13;
    }&#13;
};&#13;
System.debug("Creating new Workflow...");&#13;
//var urlTemplate = "workflows/{id}";&#13;
&#13;
var httpData = restClient.post(request.path, request.params, request.content, request.options);&#13;
if (httpData.statusCode != 201){&#13;
    throw "Error calling API. Received Status Code: " + httpData.statusCode;&#13;
}&#13;
System.debug(httpData.statusCode);&#13;
&#13;
var wfRef = JSON.parse(httpData.contentAsString);&#13;
//Get the new WF ID:&#13;
newId = wfRef.id;&#13;
&#13;
System.debug("Tagging WF");&#13;
var newWf = Server.getWorkflowWithId(newId);&#13;
var w = new Workflow();&#13;
&#13;
Server.tagGlobally(newWf, "achris", null);&#13;
System.debug("Done");&#13;
&#13;
function createGuid()  &#13;
{  &#13;
   return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {  &#13;
      var r = Math.random()*16|0, v = c === 'x' ? r : (r&amp;0x3|0x8);  &#13;
      return v.toString(16);  &#13;
   });  &#13;
} </script>
        <in-binding>
            <bind name="token" type="string" export-name="token"/>
            <bind name="typeName" type="string" export-name="typeName"/>
            <bind name="namespace" type="string" export-name="namespace"/>
        </in-binding>
        <out-binding/>
        <description>Simple task with custom script capability.</description>
        <position y="62.62346384156524" x="633.904285411599"/>
    </workflow-item>
    <workflow-item name="item7" out-name="item0" type="task" comparator="0">
        <display-name>duplicate delete workflow</display-name>
        <script encoded="false">//get workflow content to copy:&#13;
//GET https://cava-6-240-202.eng.vmware.com/vco-controlcenter/client/api/platform/workflows/78950e9c-43b3-436c-be75-c26a3da15dc9/content/&#13;
&#13;
var RestHostFactory = System.getModule("com.vmware.pscoe.library.rest").RestHostFactory();&#13;
var RestClient = System.getModule("com.vmware.pscoe.library.rest").RestClient();&#13;
&#13;
&#13;
var endpointUrl = "https://cava-6-240-202.eng.vmware.com";&#13;
var endpointName = "vRA";&#13;
var requestContent = {};&#13;
requestContent.username = "configadmin";&#13;
requestContent.password = "VMware1!";&#13;
&#13;
var restHost = RestHostFactory.newHostWithBasicAuth(endpointUrl, endpointName, requestContent.username, requestContent.password); &#13;
var restClient = new RestClient(restHost);&#13;
var wfid = "b00f7a8e-e4a7-4458-b374-8908026c1657"&#13;
var request = {&#13;
    path: '/vco-controlcenter/client/api/platform/workflows/{wfid}/content/',&#13;
    params: [wfid],&#13;
    options: {&#13;
        skipEncodeParams: true,	&#13;
        returnResponseObject: true,		&#13;
        returnResponseObjectForReal: false, 	&#13;
        stringifyJsonContent: false,	&#13;
        interpretResponseCode: false,	&#13;
        headers: {&#13;
            'Content-Type': 'application/json',&#13;
            'Accept': 'application/json',&#13;
            'Authorization': 'Bearer ' + token&#13;
        },&#13;
        errorHandler: {					//Defines a retry mechanism in case of failed requests&#13;
            numberOfRetries: 3,			//Number of retries&#13;
            retryWaitInterval: 15,			//Polling interval in seconds&#13;
            errorsToRetry: ["Read timed out"]	//Specific errors to retry (Default: ["Connection pool shut down"])&#13;
        }&#13;
    }&#13;
};&#13;
System.debug("Fetching Template Workflow via API...");&#13;
//var urlTemplate = "workflows/{id}";&#13;
&#13;
var httpData = restClient.get(request.path, request.params, request.options);&#13;
if (httpData.statusCode != 200){&#13;
    throw "Error calling API. Received Status Code: " + httpData.statusCode;&#13;
}&#13;
&#13;
System.debug("Creating Workflow Copy");&#13;
&#13;
var wfContent = JSON.parse(httpData.contentAsString);&#13;
//System.debug(wfContent);&#13;
System.debug(JSON.stringify(wfContent));&#13;
&#13;
var newId = createGuid();&#13;
//System.debug(httpData.contentAsString);&#13;
var newWfName = "Delete " + namespace + "." + typeName;&#13;
wfContent["display-name"] = newWfName;&#13;
var outputs = {&#13;
      "param": [&#13;
        {&#13;
          "name": "result",&#13;
          "type": "string"&#13;
        }&#13;
      ]&#13;
    };&#13;
wfContent["id"] = newId;&#13;
wfContent["output"] = outputs;&#13;
var newWfContent = {"name":newWfName, "schema-workflow":wfContent};&#13;
&#13;
//POST https://cava-6-240-202.eng.vmware.com/vco-controlcenter/client/api/platform/workflows&#13;
&#13;
request = {&#13;
    path: '/vco-controlcenter/client/api/platform/workflows',&#13;
    params: [],&#13;
    content: newWfContent,&#13;
    options: {&#13;
        skipEncodeParams: true,	&#13;
        returnResponseObject: true,		&#13;
        returnResponseObjectForReal: false, 	&#13;
        stringifyJsonContent: true,	&#13;
        interpretResponseCode: false,	&#13;
        headers: {&#13;
            'Content-Type': 'application/json',&#13;
            'Accept': 'application/json',&#13;
            'Authorization': 'Bearer ' + token&#13;
        },&#13;
        errorHandler: {					//Defines a retry mechanism in case of failed requests&#13;
            numberOfRetries: 3,			//Number of retries&#13;
            retryWaitInterval: 15,			//Polling interval in seconds&#13;
            errorsToRetry: ["Read timed out"]	//Specific errors to retry (Default: ["Connection pool shut down"])&#13;
        }&#13;
    }&#13;
};&#13;
System.debug("Creating new Workflow...");&#13;
//var urlTemplate = "workflows/{id}";&#13;
&#13;
var httpData = restClient.post(request.path, request.params, request.content, request.options);&#13;
if (httpData.statusCode != 201){&#13;
    throw "Error calling API. Received Status Code: " + httpData.statusCode;&#13;
}&#13;
System.debug(httpData.statusCode);&#13;
&#13;
var wfRef = JSON.parse(httpData.contentAsString);&#13;
//Get the new WF ID:&#13;
newId = wfRef.id;&#13;
&#13;
System.debug("Tagging WF");&#13;
var newWf = Server.getWorkflowWithId(newId);&#13;
var w = new Workflow();&#13;
&#13;
Server.tagGlobally(newWf, "achris", null);&#13;
System.debug("Done");&#13;
&#13;
function createGuid()  &#13;
{  &#13;
   return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {  &#13;
      var r = Math.random()*16|0, v = c === 'x' ? r : (r&amp;0x3|0x8);  &#13;
      return v.toString(16);  &#13;
   });  &#13;
} </script>
        <in-binding/>
        <out-binding/>
        <description>Simple task with custom script capability.</description>
        <position y="61.13993028017356" x="732.1814892580961"/>
    </workflow-item>
    <presentation/>
</ns2:workflow>
